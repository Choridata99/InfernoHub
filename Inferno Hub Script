local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
local Window = Rayfield:CreateWindow({
   Name = "ðŸ”¥ | Inferno Hub",
   LoadingTitle = "Inferno Hub Loading...",
   LoadingSubtitle = "by Inferno",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "InfernoHub"
   },
   Discord = {
      Enabled = false,
      Invite = "discord.gg/mKgfJb8nWN",
      RememberJoins = true
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Inferno Hub",
      Subtitle = "Key System",
      Note = "Join the discord (discord.gg/mKgfJb8nWN)",
      FileName = "Inferno Hub",
      SaveKey = true,
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = "hAoazEBLoI"
   }
})

local Tab = Window:CreateTab("Local Player", 4483362458)
local Section = Tab:CreateSection("Local Player Section")
Rayfield:Notify({
   Title = "Join The Discord For Updates About The Script",
   Content = "discord.gg/mKgfJb8nWN",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Slider = Tab:CreateSlider({
	Name = "WalkSpeed",
	Range = {16, 500},
	Increment = 10,
	Suffix = "WalkSpeed",
	CurrentValue = 16,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(s)
		game.Players.LocalPlayer.character.Humanoid.WalkSpeed = s
	end,
})

local Slider = Tab:CreateSlider({
	Name = "Jump Power",
	Range = {16, 500},
	Increment = 10,
	Suffix = "Jump Power",
	CurrentValue = 16,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(j)
		game.Players.LocalPlayer.character.Humanoid.JumpPower = j
	end,
})

local Tab = Window:CreateTab("Main", 4483362458)
local Section = Tab:CreateSection("Prison Life")
local Button = Tab:CreateButton({
   Name = "Become Criminal",
   Callback = function()
local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
local location = CFrame.new(448, 98, 2217)
pl.CFrame = location
   end,
})
local Button = Tab:CreateButton({
   Name = "Give All Guns",
   Callback = function()
local Weapon = {"AK-47"}
for i,v in pairs(workspace.Prison_ITEMS.giver:GetChildren()) do
if v.Name == Weapon[1] then
local lol = workspace.Remote.ItemHandler:InvokeServer(v.ITEMPICKUP)
end
end
 
local Weapon = {"Remington 870"}
for i,v in pairs(workspace.Prison_ITEMS.giver:GetChildren()) do
if v.Name == Weapon[1] then
local lol = workspace.Remote.ItemHandler:InvokeServer(v.ITEMPICKUP)
end
end
 
local Weapon = {"M9"}
for i,v in pairs(workspace.Prison_ITEMS.giver:GetChildren()) do
if v.Name == Weapon[1] then
local lol = workspace.Remote.ItemHandler:InvokeServer(v.ITEMPICKUP)
end
end
 
local Remote = game.Workspace.Remote['ItemHandler']
 
local Arguments = {
        [1] = Workspace.Prison_ITEMS.single:WaitForChild("Key card").ITEMPICKUP
}
 
Remote:InvokeServer(unpack(Arguments))
   end,
})
local Button = Tab:CreateButton({
   Name = "Instant Respawn",
   Callback = function()
_G.loop = true

while _G.loop == true do
wait()
    if game.Players.LocalPlayer.Character.Humanoid.Health <= 15 then
        local location = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        local A_1 = "\66\114\111\121\111\117\98\97\100\100"
        local Event = game:GetService("Workspace").Remote.loadchar
        Event:InvokeServer(A_1)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = location
        end
end
   end,
})
local Keybind = Tab:CreateKeybind({
   Name = "Infinite Jump",
   CurrentKeybind = "Space",
   HoldToInteract = false,
   Flag = "Keybind1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Keybind)
local humanoid = game.Players.LocalPlayer.Character.Humanoid
humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
   end,
})

Rayfield:LoadConfiguration()
